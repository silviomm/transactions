// Code generated by MockGen. DO NOT EDIT.
// Source: services/accountsService.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAccountService is a mock of AccountService interface.
type MockAccountService struct {
	ctrl     *gomock.Controller
	recorder *MockAccountServiceMockRecorder
}

// MockAccountServiceMockRecorder is the mock recorder for MockAccountService.
type MockAccountServiceMockRecorder struct {
	mock *MockAccountService
}

// NewMockAccountService creates a new mock instance.
func NewMockAccountService(ctrl *gomock.Controller) *MockAccountService {
	mock := &MockAccountService{ctrl: ctrl}
	mock.recorder = &MockAccountServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountService) EXPECT() *MockAccountServiceMockRecorder {
	return m.recorder
}

// AccountExists mocks base method.
func (m *MockAccountService) AccountExists(accountId int) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AccountExists", accountId)
	ret0, _ := ret[0].(bool)
	return ret0
}

// AccountExists indicates an expected call of AccountExists.
func (mr *MockAccountServiceMockRecorder) AccountExists(accountId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AccountExists", reflect.TypeOf((*MockAccountService)(nil).AccountExists), accountId)
}

// ExistsByDocumentNumber mocks base method.
func (m *MockAccountService) ExistsByDocumentNumber(documentNumber string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExistsByDocumentNumber", documentNumber)
	ret0, _ := ret[0].(bool)
	return ret0
}

// ExistsByDocumentNumber indicates an expected call of ExistsByDocumentNumber.
func (mr *MockAccountServiceMockRecorder) ExistsByDocumentNumber(documentNumber interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExistsByDocumentNumber", reflect.TypeOf((*MockAccountService)(nil).ExistsByDocumentNumber), documentNumber)
}
