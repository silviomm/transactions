// Code generated by MockGen. DO NOT EDIT.
// Source: database/repositories/accountsRepository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	account "pismo-challenge/models/account"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockAccountsRepository is a mock of AccountsRepository interface.
type MockAccountsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAccountsRepositoryMockRecorder
}

// MockAccountsRepositoryMockRecorder is the mock recorder for MockAccountsRepository.
type MockAccountsRepositoryMockRecorder struct {
	mock *MockAccountsRepository
}

// NewMockAccountsRepository creates a new mock instance.
func NewMockAccountsRepository(ctrl *gomock.Controller) *MockAccountsRepository {
	mock := &MockAccountsRepository{ctrl: ctrl}
	mock.recorder = &MockAccountsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountsRepository) EXPECT() *MockAccountsRepositoryMockRecorder {
	return m.recorder
}

// GetAccount mocks base method.
func (m *MockAccountsRepository) GetAccount(accountId int) *account.Account {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccount", accountId)
	ret0, _ := ret[0].(*account.Account)
	return ret0
}

// GetAccount indicates an expected call of GetAccount.
func (mr *MockAccountsRepositoryMockRecorder) GetAccount(accountId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccount", reflect.TypeOf((*MockAccountsRepository)(nil).GetAccount), accountId)
}

// InitializeAccountsRepository mocks base method.
func (m *MockAccountsRepository) InitializeAccountsRepository(db gorm.DB) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "InitializeAccountsRepository", db)
}

// InitializeAccountsRepository indicates an expected call of InitializeAccountsRepository.
func (mr *MockAccountsRepositoryMockRecorder) InitializeAccountsRepository(db interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitializeAccountsRepository", reflect.TypeOf((*MockAccountsRepository)(nil).InitializeAccountsRepository), db)
}
